# Credentials for superuser and application user
superuserSecret:
  name: superuser-secret
  username: postgres
  password: supersecretpassword

appUserSecret:
  name: eql-user-secret
  username: eql
  password: eqlpassword


# Values.yaml for CloudNativePG with Rook Ceph #

# Rook Ceph configurations under a unified 'rookceph' root-level key
rookCeph:
  # enabled: false
  namespace: rook-ceph

  cephCluster:
    name: rook-ceph-cluster
    image: ceph/ceph:v15.2.8
    dataDirHostPath: /var/lib/rook
    monCount: 3
    allowMultiplePerNode: false  # Default for production
    placement:
      all:
        nodeAffinity: {} 
    storage:
      useAllNodes: true
      useAllDevices: true
      config:
        databaseSizeMB: "1024"  # Set to desired database size in MB
        journalSizeMB: "512"    # Set to desired journal size in MB
    dashboard:
      enabled: true
    network:
      hostNetwork: false

  cephFileSystem:
    name: rook-ceph-fs
    preservePoolsOnDelete: false          # Set to true if you want to preserve pools on deletion
    metadataServer:
      activeCount: 1                      # Number of active metadata servers
      activeStandby: true                 # Enables standby mode for failover
    metadataPool:
      replicated:
        size: 3
    dataPools:
      - replicated:
          size: 3

  cephStorageClass:
    name: rook-cephfs
    reclaimPolicy: Retain
    allowVolumeExpansion: true
    mountOptions:
      - discard
    provisioner: rook-ceph.cephfs.csi.ceph.com
    parameters:
      clusterID: rook-ceph
      fsName: cephfs
      pool: cephfs-data0
      csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
      csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
      csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
      csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
      imageFeatures: layering,exclusive-lock,object-map,fast-diff

  cephPVC:
    name: cephfs-pvc
    namespace: cnpg-database
    accessModes:
      - ReadWriteMany
    resources:
      requests:
        storage: 1Gi
    storageClassName: rook-cephfs


# CloudNativePG Cluster Settings
cloudNativePG:
  name: eql-storage-postgresql-cluster
  namespace: eql-cnpg-cluster-projvol
  instances: 3
  cpuRequest: 500m
  memoryRequest: 1Gi
  cpuLimit: 1
  memoryLimit: 2Gi
  primaryUpdateMethod: switchover
  primaryUpdateStrategy: unsupervised
  enableSuperuserAccess: true
  monitoring:
    enablePodMonitor: true
 

  bootstrap:
    initdb:
      database: eql
      owner: eql
      dataChecksums: true
      localeSettings:
        encoding: UTF8
        localeCType: C
        localeCollate: C

  storage:
    size: 2Gi
  postgresql:
    parameters:
      logging_collector: "on"
      log_statement: "all"
      log_destination: "csvlog"
      log_directory: "/controller/log"
      log_filename: "postgres"
      log_min_messages: "info"
      log_rotation_size: "0"
      log_rotation_age: "0"
      log_truncate_on_rotation: "false"
      #synchronousStandbyNames: "1 (lottery-storage-postgresql-cluster-replica-1)"
      walLevel: 'replica'
      maxWalSenders: 10
      walKeepSize: 64MB
      synchronousCommit: on
    pg_hba:
      - local    all    all    peer  # For local peer authentication
      - host     eql    eql    0.0.0.0/0    md5
      - host     all    all    ::/0         md5
      - host     all    all    all          md5

    synchronous:
      method: "first"
      number: 1
  schemaConfigMap:
    name: cloudnativepg-eql-schema
    key: schema.sql
